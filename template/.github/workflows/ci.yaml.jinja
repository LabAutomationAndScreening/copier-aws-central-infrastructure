{% raw %}name: CI

on:
  push:
    branches-ignore:
      - 'gh-readonly-queue/**' # don't run (again) when on these special branches created during merge groups; the `on: merge_group` already triggers it.
  merge_group:

env:
  PYTHONUNBUFFERED: True
  PRE_COMMIT_HOME: ${{ github.workspace }}/.precommit_cache

permissions:
    id-token: write
    contents: write # needed for mutex, and updating dependabot branches
    statuses: write # needed for updating status on Dependabot PRs

jobs:
  get-values:
    uses: ./.github/workflows/get-values.yaml

  lint:
    needs: [ get-values ]
    name: Pre-commit
    uses: ./.github/workflows/pre-commit.yaml
    with:
      python-version: {% endraw %}{{ python_version }}{% raw %}

  unit-test:
    needs: [ lint ]
    runs-on: {% endraw %}{{ gha_linux_runner }}{% raw %}
    steps:
      - name: Checkout code
        uses: actions/checkout@{% endraw %}{{ gha_checkout }}{% raw %}

      - name: Install latest versions of python packages
        uses: ./.github/actions/install_deps
        with:
          python-version: {% endraw %}{{ python_version }}{% raw %}

      - name: Unit test
        run: uv run pytest tests/unit --cov-report=xml --durations=5

  iac-management-pulumi:
    uses: ./.github/workflows/pulumi-aws.yml
    needs: [ unit-test ]
    with:
      AWS_REGION: {% endraw %}{{ aws_org_home_region }}{% raw %}
      PULUMI_STACK_NAME: prod
      PYTHON_VERSION: {% endraw %}{{ python_version }}{% raw %}
      DEPLOY_SCRIPT_MODULE_NAME: aws_central_infrastructure.iac_management.lib
      DEPLOY_SCRIPT_NAME: pulumi_deploy
      PULUMI_PREVIEW: true
      PREVIEW_ROLE_NAME: InfraPreview--{% endraw %}{{ repo_name }}{% raw %}
      PULUMI_UP: ${{ github.ref == 'refs/heads/main' }}
      PULUMI_UP_ROLE_NAME: InfraDeploy--{% endraw %}{{ repo_name }}{% raw %}
      AWS_ACCOUNT_ID: "{% endraw %}{{ aws_production_account_id }}{% raw %}"
{% endraw %}{% if manage_github_repos %}{% raw %}
  github-repos-pulumi:
    uses: ./.github/workflows/pulumi-aws.yml
    needs: [ unit-test ]
    with:
      AWS_REGION: {% endraw %}{{ aws_org_home_region }}{% raw %}
      PULUMI_STACK_NAME: prod
      PYTHON_VERSION: {% endraw %}{{ python_version }}{% raw %}
      DEPLOY_SCRIPT_MODULE_NAME: aws_central_infrastructure.github_repos.lib
      DEPLOY_SCRIPT_NAME: pulumi_deploy
      PULUMI_PREVIEW: true
      PREVIEW_ROLE_NAME: InfraPreview--{% endraw %}{{ repo_name }}{% raw %}
      PULUMI_UP: ${{ github.ref == 'refs/heads/main' }}
      PULUMI_UP_ROLE_NAME: InfraDeploy--{% endraw %}{{ repo_name }}{% raw %}
      AWS_ACCOUNT_ID: "{% endraw %}{{ aws_production_account_id }}{% raw %}"{% endraw %}{% if use_repo_secret_for_github_iac_tokens %}{% raw %}
      iac-github-api-tokens: ${{ secrets.IAC-GITHUB-API-TOKENS }}{% endraw %}{% endif %}{% raw %}
      ADDITIONAL_MUTEX_SUFFIX: github{% endraw %}{% endif %}{% if manage_okta %}{% raw %}
  okta-pulumi:
    uses: ./.github/workflows/pulumi-aws.yml
    needs: [ unit-test ]
    with:
      AWS_REGION: {% endraw %}{{ aws_org_home_region }}{% raw %}
      PULUMI_STACK_NAME: prod
      PYTHON_VERSION: {% endraw %}{{ python_version }}{% raw %}
      DEPLOY_SCRIPT_MODULE_NAME: aws_central_infrastructure.okta.lib
      DEPLOY_SCRIPT_NAME: pulumi_deploy
      PULUMI_PREVIEW: true
      PREVIEW_ROLE_NAME: InfraPreview--{% endraw %}{{ repo_name }}{% raw %}
      PULUMI_UP: ${{ github.ref == 'refs/heads/main' }}
      PULUMI_UP_ROLE_NAME: InfraDeploy--{% endraw %}{{ repo_name }}{% raw %}
      AWS_ACCOUNT_ID: "{% endraw %}{{ aws_production_account_id }}{% raw %}"
      ADDITIONAL_MUTEX_SUFFIX: okta{% endraw %}{% endif %}{% raw %}

  central-networking-pulumi:
    uses: ./.github/workflows/pulumi-aws.yml
    needs: [ iac-management-pulumi ]
    with:
      AWS_REGION: {% endraw %}{{ aws_org_home_region }}{% raw %}
      PULUMI_STACK_NAME: prod
      PYTHON_VERSION: {% endraw %}{{ python_version }}{% raw %}
      DEPLOY_SCRIPT_MODULE_NAME: aws_central_infrastructure.central_networking.lib
      DEPLOY_SCRIPT_NAME: pulumi_deploy
      PULUMI_PREVIEW: true
      PREVIEW_ROLE_NAME: InfraPreview--{% endraw %}{{ repo_name }}{% raw %}
      PULUMI_UP: ${{ github.ref == 'refs/heads/main' }}
      PULUMI_UP_ROLE_NAME: InfraDeploy--{% endraw %}{{ repo_name }}{% raw %}
      AWS_ACCOUNT_ID: "{% endraw %}{{ aws_production_account_id }}{% raw %}"

  artifact-stores-pulumi:
    uses: ./.github/workflows/pulumi-aws.yml
    needs: [ iac-management-pulumi, central-networking-pulumi ] # spinning up AMI builders depends on central-networking
    with:
      AWS_REGION: {% endraw %}{{ aws_org_home_region }}{% raw %}
      PULUMI_STACK_NAME: prod
      PYTHON_VERSION: {% endraw %}{{ python_version }}{% raw %}
      DEPLOY_SCRIPT_MODULE_NAME: aws_central_infrastructure.artifact_stores.lib
      DEPLOY_SCRIPT_NAME: pulumi_deploy
      PULUMI_PREVIEW: true
      PREVIEW_ROLE_NAME: InfraPreview--{% endraw %}{{ repo_name }}{% raw %}
      PULUMI_UP: ${{ github.ref == 'refs/heads/main' }}
      PULUMI_UP_ROLE_NAME: InfraDeploy--{% endraw %}{{ repo_name }}{% raw %}
      AWS_ACCOUNT_ID: "{% endraw %}{{ aws_production_account_id }}{% raw %}"


{% endraw %}{% if initial_iac_management_deploy_occurred %}{% raw %}  identity-center-pulumi:
    uses: ./.github/workflows/pulumi-aws.yml
    needs: [ iac-management-pulumi, artifact-stores-pulumi ] # Identity Center depends on outputs from the Artifact Stores stack to set up permission sets
    with:
      AWS_REGION: {% endraw %}{{ aws_org_home_region }}{% raw %}
      PULUMI_STACK_NAME: prod
      PYTHON_VERSION: {% endraw %}{{ python_version }}{% raw %}
      DEPLOY_SCRIPT_MODULE_NAME: aws_central_infrastructure.identity_center.lib
      DEPLOY_SCRIPT_NAME: pulumi_deploy
      PULUMI_PREVIEW: true
      PREVIEW_ROLE_NAME: InfraPreview--{% endraw %}{{ repo_name }}{% raw %}--identity-center
      PULUMI_UP: ${{ github.ref == 'refs/heads/main' }}
      PULUMI_UP_ROLE_NAME: InfraDeploy--{% endraw %}{{ repo_name }}{% raw %}--identity-center
      AWS_ACCOUNT_ID: "{% endraw %}{{ identity_center_production_account_id }}{% raw %}"{% endraw %}{% endif %}{% raw %}

  required-check:
    runs-on: {% endraw %}{{ gha_linux_runner }}{% raw %}
    needs:
      - get-values
      - iac-management-pulumi
      - artifact-stores-pulumi
      - central-networking-pulumi{% endraw %}{% if initial_iac_management_deploy_occurred %}{% raw %}
      - identity-center-pulumi{% endraw %}{% endif %}{% if manage_github_repos %}{% raw %}
      - github-repos-pulumi{% endraw %}{% endif %}{% if manage_okta %}{% raw %}
      - okta-pulumi{% endraw %}{% endif %}{% raw %}
    if: always()
    steps:
      - name: fail if prior job failure
        if: needs.iac-management-pulumi.result != 'success' || needs.artifact-stores-pulumi.result != 'success' || needs.central-networking-pulumi.result != 'success'{% endraw %}{% if initial_iac_management_deploy_occurred %}{% raw %} || needs.identity-center-pulumi.result != 'success'{% endraw %}{% endif %}{% if manage_github_repos %}{% raw %} || needs.github-repos-pulumi.result != 'success'{% endraw %}{% endif %}{% if manage_okta %}{% raw %} || needs.okta-pulumi.result != 'success'{% endraw %}{% endif %}{% raw %}
        run: |
          exit 1
      - name: Mark updated Dependabot commit of devcontainer hash as succeeded
        if: needs.get-values.outputs.dependabot-commit-created == 'true'
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh api \
            -X POST -H "Accept: application/vnd.github.v3+json" \
            "/repos/${{ github.repository }}/statuses/${{ needs.get-values.outputs.new-dependabot-sha }}" \
            -f state=success -f context="required-check" -f description="Initial CI run passed" \
            -f target_url="${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"{% endraw %}
