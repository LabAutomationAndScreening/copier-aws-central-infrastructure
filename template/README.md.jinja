{% raw %}[![pre-commit](https://img.shields.io/badge/pre--commit-enabled-brightgreen?logo=pre-commit&logoColor=white)](https://github.com/pre-commit/pre-commit)
[![Ruff](https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/astral-sh/ruff/main/assets/badge/v2.json)](https://github.com/astral-sh/ruff)
[![uv](https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/astral-sh/uv/main/assets/badge/v0.json)](https://github.com/astral-sh/uv)
[![Checked with pyright](https://microsoft.github.io/pyright/img/pyright_badge.svg)](https://microsoft.github.io/pyright/)
[![Actions status](https://www.github.com/{% endraw %}{{ repo_org_name }}/{{ repo_name }}{% raw %}/actions/workflows/ci.yaml/badge.svg?branch=main)](https://www.github.com/{% endraw %}{{ repo_org_name }}/{{ repo_name }}{% raw %}/actions)
[![Open in Dev Containers](https://img.shields.io/static/v1?label=Dev%20Containers&message=Open&color=blue)](https://vscode.dev/redirect?url=vscode://ms-vscode-remote.remote-containers/cloneInVolume?url=https://www.github.com/{% endraw %}{{ repo_org_name }}/{{ repo_name }}{% raw %})


# Usage{% endraw %}{% if manage_github_repos %}{% raw %}
## Managing your company's GitHub Organization
### Repositories
The file `src/aws_central_infrastructure/github_repos/repos.py` contains a list of repositories that are managed by this project. To add a new repository, add a new entry to the `configs` list.

### Teams
The file `src/aws_central_infrastructure/github_repos/teams.py` contains a list of teams that are managed by this project. To add a new team, add a new entry to the `configs` list.
Ensure to assign it appropriate permissions (typically `push`) for the repositories it needs access to.
Teams can have a parent, from which they inherit permissions. This is useful for creating a hierarchy of teams.
If an explicit parent is not provided in the configuration, the team will have the root `Everyone` team as its parent.

### Initial configuration for Github organization
It's recommended to set the following permissions for the Organization to guide people towards doing more things via this repository instead of the Console.
https://github.com/organizations/lab-sync/settings/member_privileges
Base Permissions: Read
Repository Creation: Neither
Pages Creation: Neither
Allow members to create teams: No{% endraw %}{% endif %}{% raw %}

## Allowing a git repository to publish a packgae to AWS CodeArtifact
The file `src/aws_central_infrastructure/artifact_stores/internal_packages.py` contains a list of repositories that are allowed to publish packages to the AWS CodeArtifact registry. To enable a new repository to do so, add a new entry to the `repo_package_claims` list. This ensures that only one git repo has permission to publish that package, and there's no conflicts of two repos overwriting each other's packages.
At the moment, only Python packages are supported. See https://github.com/LabAutomationAndScreening/copier-aws-central-infrastructure/issues/22 and https://github.com/LabAutomationAndScreening/copier-aws-central-infrastructure/issues/21


# Development

## Using Pulumi
Run a Pulumi Preview for the IaC Management project:
```bash
uv run python -m aws_central_infrastructure.deploy_iac_management --stack=prod
```

Run a Pulumi Preview for the Artifact Stores project:
```bash
uv run python -m aws_central_infrastructure.deploy_artifact_stores --stack=prod
```

Run a Pulumi Preview for the Central Networking project:
```bash
uv run python -m aws_central_infrastructure.deploy_central_networking --stack=prod
```

Run a Pulumi Preview for the Identity Center project:
```bash
uv run python -m aws_central_infrastructure.deploy_identity_center --stack=prod
```{% endraw %}{% if manage_github_repos %}{% raw %}

Run a Pulumi Preview for the GitHub Repositories project:
```bash
uv run python -m aws_central_infrastructure.deploy_github_repos --stack=prod
```{% endraw %}{% endif %}{% raw %}


## Updating from the template
This repository uses a copier template. To pull in the latest updates from the template, use the command:
`copier update --trust --conflict rej --defaults`{% endraw %}
